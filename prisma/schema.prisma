generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum ActionMethodEnum {
  get     @map("get")
  put     @map("put")
  post    @map("post")
  patch   @map("patch")
  delete  @map("delete")

  @@map("action_method")
}

enum PartnerRoleEnum {
  provider     @map("provider")
  client       @map("client")

  @@map("partner_role_name")
}

enum StaffRoleEnum {
  admin        @map("admin")
  seller       @map("seller")
  storekeeper  @map("storekeeper")

  @@map("staff_role_name")
}

model ActionModel {
  id           String            @map("id")           @db.Uuid       @default(dbgenerated("GEN_RANDOM_UUID()"))
  url          String            @map("url")          @db.VarChar()
  name         String            @map("name")         @db.VarChar()
  method       ActionMethodEnum  
  description  String            @map("description")  @db.VarChar()  @default("")

  staffs        StaffModel[]
  partners      PartnerModel[]
  staffRoles    StaffRoleModel[]
  partnerRoles  PartnerRoleModel[]

  @@id([ id ])
  @@index([ id ])
  @@unique([ url, name, method ])
  @@map("action")
}

model PartnerRoleModel {
  id         String           @map("id")          @db.Uuid         @default(dbgenerated("GEN_RANDOM_UUID()"))
  name       PartnerRoleEnum  @map("name")
  createdAt  DateTime         @map("created_at")  @db.Timestamptz  @default(dbgenerated("NOW()"))

  actions   ActionModel[]
  partners  PartnerModel[]

  @@id([ id ])
  @@index([ id ])
  @@unique([ name ])
  @@map("partner_role")
}

model StaffRoleModel {
  id         String         @map("id")          @db.Uuid         @default(dbgenerated("GEN_RANDOM_UUID()"))
  name       StaffRoleEnum  @map("name")
  createdAt  DateTime       @map("created_at")  @db.Timestamptz  @default(dbgenerated("NOW()"))

  staffs   StaffModel[]
  actions  ActionModel[]

  @@id([ id ])
  @@index([ id ])
  @@unique([ name ])
  @@map("staff_role")
}

model PartnerModel {
  id         String     @map("id")          @db.Uuid         @default(dbgenerated("GEN_RANDOM_UUID()"))
  phone      String     @map("phone")       @db.VarChar()                                    @unique 
  username   String     @map("username")    @db.VarChar()                                    @unique
  fullname   String     @map("fullname")    @db.VarChar()
  password   String     @map("password")    @db.VarChar()  
  token      String?    @map("token")       @db.VarChar()  
  balance    BigInt     @map("balance")     @db.BigInt     @default(0)
  whereFrom  String     @map("where_from")  @db.VarChar()  @default("")

  createdAt  DateTime   @map("created_at")  @db.Timestamptz  @default(dbgenerated("NOW()"))
  updatedAt  DateTime   @map("updated_at")  @db.Timestamptz  @updatedAt
  deletedAt  DateTime?  @map("deleted_at")  @db.Timestamptz

  roles    PartnerRoleModel[]
  actions  ActionModel[]
  models   ModelModel[]

  @@id([ id ])
  @@index([ id ])
  @@map("partner")
}

model StaffModel {
  id         String     @map("id")          @db.Uuid         @default(dbgenerated("GEN_RANDOM_UUID()"))
  phone      String     @map("phone")       @db.VarChar()                                    @unique 
  username   String     @map("username")    @db.VarChar()                                    @unique
  fullname   String     @map("fullname")    @db.VarChar()
  password   String     @map("password")    @db.VarChar()  
  token      String?    @map("token")       @db.VarChar()  
 
  createdAt  DateTime   @map("created_at")  @db.Timestamptz  @default(dbgenerated("NOW()"))
  updatedAt  DateTime   @map("updated_at")  @db.Timestamptz  @updatedAt
  deletedAt  DateTime?  @map("deleted_at")  @db.Timestamptz

  roles    StaffRoleModel[]
  actions  ActionModel[]

  @@id([ id ])
  @@index([ id ])
  @@map("staff")
}

model FurnitureTypeModel {
  id         String     @map("id")          @db.Uuid         @default(dbgenerated("GEN_RANDOM_UUID()"))
  name       String     @map("name")        @db.VarChar()  
 
  createdAt  DateTime   @map("created_at")  @db.Timestamptz  @default(dbgenerated("NOW()"))
  updatedAt  DateTime   @map("updated_at")  @db.Timestamptz  @updatedAt
  deletedAt  DateTime?  @map("deleted_at")  @db.Timestamptz

  models  ModelModel[]

  @@id([ id ])
  @@index([ id ])
  @@unique([ name ])
  @@map("furniture_type")
}

model ModelModel {
  id               String     @map("id")                 @db.Uuid         @default(dbgenerated("GEN_RANDOM_UUID()"))
  name             String     @map("name")               @db.VarChar()  
  partnerId        String     @map("partner_id")         @db.Uuid  
  furnitureTypeId  String     @map("furniture_type_id")  @db.Uuid  
 
  createdAt  DateTime   @map("created_at")  @db.Timestamptz  @default(dbgenerated("NOW()"))
  updatedAt  DateTime   @map("updated_at")  @db.Timestamptz  @updatedAt
  deletedAt  DateTime?  @map("deleted_at")  @db.Timestamptz

  partner        PartnerModel        @relation(fields: [ partnerId       ], references: [ id ], onDelete: Cascade, onUpdate: NoAction)
  furnitureType  FurnitureTypeModel  @relation(fields: [ furnitureTypeId ], references: [ id ], onDelete: Cascade, onUpdate: NoAction)

  @@id([ id ])
  @@index([ id ])
  @@unique([ name ])
  @@map("model")
}
